# Stage 1: Compile the planner
Bootstrap: docker
From: ubuntu:18.04
Stage: build

%files
    . /planner

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get -y install --no-install-recommends cmake g++ make python autotools-dev automake gcc g++-multilib

    ## Build the planner
    cd /planner
    ./build.py release64 -j8

    ## Strip binaries.
    strip --strip-all /planner/builds/release64/bin/downward


# Stage 2: Run the planner
Bootstrap: docker
From: ubuntu:18.04
Stage: run

# Copy planner binary and required files from Stage 1.
%files from build
    /planner/driver
    /planner/fast-downward.py
    /planner/builds/release64/bin

%post
    apt-get update
    apt-get -y install --no-install-recommends python
    apt-get clean
    rm -rf /var/lib/apt/lists/*

%runscript
    ## The runscript is called whenever the container is used to solve
    ## an instance.

    DOMAINFILE=$1
    PROBLEMFILE=$2
    PLANFILE=$3

    ## Call your planner.
    /planner/fast-downward.py \
        --build=release64 \
        --plan-file $PLANFILE \
        $DOMAINFILE \
        $PROBLEMFILE \
        --search "astar(modular_pdb(modular_rbp(time_limit=200),rand_walk(time_limit=10),900,pdb_factory=modular_symbolic,create_perimeter=true))"

## Update the following fields with meta data about your submission.
## Please use the same field names and use only one line for each value.
%labels
Name        Complementary1
Description  Modified version of complementary heuristic, where we are using completely new bin packing algorithms(paper pending), in situ learning of all the algorithm parameters critical to the pattern selection performance (previously only which pattern generation algorithm we use).  Also we have added a new pattern generator inspired on how Gamer chooses a single PDB which it keeps improving.  Also the selection algorithm is based on size of search space (previously selection criteria was time).  Some features from previous complementary heuristic as in the iJCAI 18 paper are yet to be adapted to this version, e.g. mutation for local search of succesful selection, stratified sampling.
Authors Santiago Franco<santiago.franco@gmail.com>, Levi H S Lelis<levilelis@gmail.com>, Mike W Barley<m.barley@auckland.ac.nz>,Stefan Edelkamp<stefan.edelkamp@kcl.ac.uk>, Moises Martinez<moises.martinez@kcl.ac.uk>, Ionut Moraru <ionut.moraru@kcl.ac.uk>
SupportsDerivedPredicates no
SupportsQuantifiedPreconditions no
SupportsQuantifiedEffects yes
