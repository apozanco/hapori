#0Y_ #0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "CL-PPCRE"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-PPCRE|::|CASE-INSENSITIVE-MODE-P|)
(|SYSTEM|::|%PUTD| '|CL-PPCRE|::|CASE-INSENSITIVE-MODE-P|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-PPCRE|::|CASE-INSENSITIVE-MODE-P|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Accessor macro to extract the first flag out of a three-element flag list."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-PPCRE|::|FLAGS| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CL-PPCRE|::|CASE-INSENSITIVE-MODE-P|
       `(|COMMON-LISP|::|FIRST| ,|CL-PPCRE|::|FLAGS|))))))
  '(|CL-PPCRE|::|FLAGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-PPCRE|::|MULTI-LINE-MODE-P|)
(|SYSTEM|::|%PUTD| '|CL-PPCRE|::|MULTI-LINE-MODE-P|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-PPCRE|::|MULTI-LINE-MODE-P|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Accessor macro to extract the second flag out of a three-element flag list."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-PPCRE|::|FLAGS| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CL-PPCRE|::|MULTI-LINE-MODE-P|
       `(|COMMON-LISP|::|SECOND| ,|CL-PPCRE|::|FLAGS|))))))
  '(|CL-PPCRE|::|FLAGS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-PPCRE|::|SINGLE-LINE-MODE-P|)
(|SYSTEM|::|%PUTD| '|CL-PPCRE|::|SINGLE-LINE-MODE-P|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-PPCRE|::|SINGLE-LINE-MODE-P|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Accessor macro to extract the third flag out of a three-element flag list."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2. 2.
       |COMMON-LISP|::|NIL|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-PPCRE|::|FLAGS| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CL-PPCRE|::|SINGLE-LINE-MODE-P|
       `(|COMMON-LISP|::|THIRD| ,|CL-PPCRE|::|FLAGS|))))))
  '(|CL-PPCRE|::|FLAGS|)))
(|SYSTEM|::|C-DEFUN| '|CL-PPCRE|::|SET-FLAG|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-PPCRE|::|TOKEN|)))
(|SYSTEM|::|C-DEFUN| '|CL-PPCRE|::|ADD-RANGE-TO-HASH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-PPCRE|::|HASH| |CL-PPCRE|::|FROM| |CL-PPCRE|::|TO|)))
(|SYSTEM|::|C-DEFUN| '|CL-PPCRE|::|CONVERT-CHAR-CLASS-TO-HASH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|LIST|)))
(|SYSTEM|::|C-DEFUN| '|CL-PPCRE|::|MAYBE-SPLIT-REPETITION|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-PPCRE|::|REGEX| |CL-PPCRE|::|GREEDYP| |CL-PPCRE|::|MINIMUM|
    |CL-PPCRE|::|MAXIMUM| |CL-PPCRE|::|MIN-LEN| |COMMON-LISP|::|LENGTH|
    |CL-PPCRE|::|REG-SEEN|)))
(|SYSTEM|::|C-DEFUN| '|CL-PPCRE|::|MAYBE-ACCUMULATE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-PPCRE|::|STR|)))
(|SYSTEM|::|C-DEFUN| '|CL-PPCRE|::|CONVERT-AUX|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-PPCRE|::|PARSE-TREE|)))
(|SYSTEM|::|C-DEFUN| '|CL-PPCRE|::|CONVERT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-PPCRE|::|PARSE-TREE|)))
