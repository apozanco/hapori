Bootstrap: docker
From: ubuntu:bionic

%post
    ## Install all necessary dependencies.
    apt-get update
    apt-get install --no-install-recommends -y \
    cmake \
    build-essential \
    ca-certificates \
    xutils-dev \
    scons \
    gcc-multilib \
    flex \
    bison \
    python2.7 \
    python-dev \
    libboost-dev \
    libjudy-dev \
    libboost-python-dev \
    libboost-program-options-dev \
        google-perftools \
        libgoogle-perftools-dev \
    g++-multilib \
    g++ \
    cython \
    git
    rm -rf /var/lib/apt/lists/*

    git clone -b ipc-2018-seq-agl https://bitbucket.org/ipc2018-classical/team31.git /planner

    ## Set up environment variables
    ##
    ## Uncomment if you want to get latest LAPKT version
    ## export LAPKT_URL=https://github.com/LAPKT-dev/LAPKT-public/archive/master.tar.gz \

    export LAPKT_PATH=/planner/LAPKT-public

    ## Download LAPKT-public
    ## curl -SL $LAPKT_URL | tar -xz
    ## mv LAPKT-* $LAPKT_PATH
    cd /planner
    ## tar xjf LAPKT-public.tar.bz2
    cd $LAPKT_PATH
    cd external/libff
    make clean
    make depend
    make

    ## Build DFS+ planner
    cd ../..
    cd planners/dfs_plus-ffparser
    scons -j4
    cp dfs_plus /planner/.
    ## Build planner for FD-parser
    cd ../dfs_plus
    ./build.py


%runscript
    ## The runscript is called whenever the container is used to solve
    ## an instance.

    DOMAINFILE=$1
    PROBLEMFILE=$2
    PLANFILE=$3


    ## Call your planner using FD-parser.
    /planner/LAPKT-public/planners/dfs_plus/dfs_plus.py $DOMAINFILE $PROBLEMFILE $PLANFILE


## Update the following fields with meta data about your submission.
## Please use the same field names and use only one line for each value.
%labels
Name        LAPKT-DFS+
Description BLIND Depth-First-Width planner implemented with LAPKT
Authors     Nir Lipovetzky <nir.lipovetzky@unimelb.edu.au> and Miquel Ramirez <miguel.ramirez@unimelb.edu.au> and Guillem Frances <guillem.frances@unibas.ch> and Hector Geffner <hector.geffner@upf.edu>
SupportsDerivedPredicates no
SupportsQuantifiedPreconditions yes
SupportsQuantifiedEffects yes
