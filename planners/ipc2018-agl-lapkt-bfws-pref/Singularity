Bootstrap: docker
From: ubuntu:18.04

%files
    . /planner

%post

    ## The "%post"-part of this script is called after the container has
    ## been created with the "%setup"-part above and runs "inside the
    ## container". Most importantly, it is used to install dependencies
    ## and build the planner. Add all commands that have to be executed
    ## once before the planner runs in this part of the script.

    ## Install all necessary dependencies.
    apt-get update
    apt-get install --no-install-recommends -y \
    cmake \
    build-essential \
    ca-certificates \
    xutils-dev \
    scons \
    gcc-multilib \
    flex \
    bison \
    python2.7 \
    python-dev \
    libboost-dev \
    libjudy-dev \
    libboost-python-dev \
    libboost-program-options-dev \
    g++-multilib \
    g++

    rm -rf /var/lib/apt/lists/*

    ## Set up environment variables
    ##
    ## Uncomment if you want to get latest LAPKT version
    ## export LAPKT_URL=https://github.com/LAPKT-dev/LAPKT-public/archive/master.tar.gz \

    export LAPKT_PATH=/planner/LAPKT-public

    ## Download LAPKT-public
    ## curl -SL $LAPKT_URL | tar -xz
    ## mv LAPKT-* $LAPKT_PATH
    cd $LAPKT_PATH
    cd external/libff
    make clean
    make depend
    make

    ## Build your planner
    cd /planner/BFWS/ff-version
    scons -j4
    cd /planner/BFWS/fd-version
    ./build.py

    ## Build FD
    cd /planner/Fast-Downward-2018-2
    ./build.py release64 -j4

    ## Build h2-preprocessor
    #cd /planner
    #tar xjf h2-fd-preprocessor.tar.bz2
    cd /planner/h2-fd-preprocessor
    mkdir -p builds/release32
    cd builds/release32
    cmake ../../
    make -j4

    ## Strip binaries.
    strip --strip-all /planner/BFWS/ff-version/bfws \
        /planner/Fast-Downward-2018-2/builds/release64/bin/downward \
        /planner/h2-fd-preprocessor/builds/release32/bin/preprocess

    ## Remove packages unneeded for running the planner.
    apt-get -y autoremove cmake \
        build-essential \
        ca-certificates \
        xutils-dev \
        scons \
        gcc-multilib \
        flex \
        bison \
        g++-multilib \
        g++
    rm -rf /var/lib/apt/lists/*

    ## Only keep essential binaries.
    mkdir -p /compiled-planner/LAPKT-public/external/libff
    mv /planner/LAPKT-public/external/libff/libff.a /compiled-planner/LAPKT-public/external/libff
    mkdir -p /compiled-planner/BFWS
    mv /planner/BFWS/ff-version /compiled-planner/BFWS
    mv /planner/BFWS/fd-version /compiled-planner/BFWS
    mkdir -p /compiled-planner/Fast-Downward-2018-2/builds/release32
    mv /planner/Fast-Downward-2018-2/builds/release64/bin /compiled-planner/Fast-Downward-2018-2/builds/release32
    mv /planner/Fast-Downward-2018-2/driver /planner/Fast-Downward-2018-2/fast-downward.py /compiled-planner/Fast-Downward-2018-2
    mkdir -p /compiled-planner/h2-fd-preprocessor/builds/release32
    mv /planner/h2-fd-preprocessor/builds/release32/bin /compiled-planner/h2-fd-preprocessor/builds/release32
    rm -rf /planner
    mv /compiled-planner /planner

%runscript
    ## The runscript is called whenever the container is used to solve
    ## an instance.

    DOMAINFILE=$1
    PROBLEMFILE=$2
    PLANFILE=$3


    ## Call your planner using FD-parser.
    /planner/BFWS/fd-version/bfws_f5.py $DOMAINFILE $PROBLEMFILE $PLANFILE


## Update the following fields with meta data about your submission.
## Please use the same field names and use only one line for each value.
%labels
Name        LAPKT-BFWS-Preference
Description BFWS using novelty as preference (AAAI-17 BFW-f5) implemented with LAPKT
Authors     Nir Lipovetzky <nir.lipovetzky@unimelb.edu.au> and Miquel Ramirez <miguel.ramirez@unimelb.edu.au> and Guillem Frances <guillem.frances@unibas.ch> and Hector Geffner <hector.geffner@upf.edu>
SupportsDerivedPredicates no
SupportsQuantifiedPreconditions yes
SupportsQuantifiedEffects yes
